 Address    Code        Basic                     Source

0x00400000  0x240d0001  addiu $13,$0,0x00000006        addiu   $t5, $zero, 1           # t5 = constant 1
0x00400004  0x24180001  addiu $24,$0,0x00000007        addiu   $t8, $zero, 1           # t8 = 1: swap performed
0x00400008  0x13000012  beq $24,$0,0x00000012 10       beq     $t8, $zero, end         # Verifies if a swap has ocurred
0x0040000c  0x3c011001  lui $1,0x00001001     11       la      $t0, array              # t0 points the first array element
0x00400010  0x34280000  ori $8,$1,0x00000000       
0x00400014  0x3c011001  lui $1,0x00001001     12       la      $t6, size               # 
0x00400018  0x342e001c  ori $14,$1,0x0000001c      
0x0040001c  0x8dce0000  lw $14,0x00000000($14)13       lw      $t6, 0($t6)             # t6 <- size    
0x00400020  0x24180000  addiu $24,$0,0x000000014       addiu   $t8, $zero, 0           # swap <- 0
0x00400024  0x8d090000  lw $9,0x00000000($8)  17       lw      $t1, 0($t0)             # t1 <- array[i]
0x00400028  0x8d0a0004  lw $10,0x00000004($8) 18       lw      $t2, 4($t0)             # t2 <- array[i+1]
0x0040002c  0x0149782a  slt $15,$10,$9        19       slt     $t7, $t2, $t1           # array[i+1] < array[i] ?
0x00400030  0x11ed0004  beq $15,$13,0x0000000420       beq     $t7, $t5, swap          # Branch if array[i+1] < array[i]
0x00400034  0x25080004  addiu $8,$8,0x0000000423       addiu   $t0, $t0, 4             # t0 points the next element
0x00400038  0x25ceffff  addiu $14,$14,0xffffff24       addiu   $t6, $t6, -1            # size--
0x0040003c  0x11cdfff2  beq $14,$13,0xfffffff225       beq     $t6, $t5, while         # Verifies if all elements were compared
0x00400040  0x08100009  j 0x00400024          26       j       loop    
0x00400044  0xad090004  sw $9,0x00000004($8)  30       sw      $t1, 4($t0)
0x00400048  0xad0a0000  sw $10,0x00000000($8) 31       sw      $t2, 0($t0)
0x0040004c  0x24180001  addiu $24,$0,0x000000032       addiu   $t8, $zero, 1           # Indicates a swap
0x00400050  0x0810000d  j 0x00400034          33       j       continue
0x00400054  0x08100015  j 0x00400054          36       j       end 
